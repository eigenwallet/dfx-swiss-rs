/*
 * DFX API
 *
 * DFX API PRD (updated on 7/3/2025, 12:42:13 PM)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DepositDto {
    #[serde(rename = "id")]
    pub id: f64,
    #[serde(rename = "address")]
    pub address: String,
    #[serde(rename = "blockchain")]
    pub blockchain: Blockchain,
    #[serde(rename = "blockchains")]
    pub blockchains: Vec<Blockchains>,
}

impl DepositDto {
    pub fn new(id: f64, address: String, blockchain: Blockchain, blockchains: Vec<Blockchains>) -> DepositDto {
        DepositDto {
            id,
            address,
            blockchain,
            blockchains,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Blockchain {
    #[serde(rename = "Bitcoin")]
    Bitcoin,
    #[serde(rename = "Lightning")]
    Lightning,
    #[serde(rename = "Monero")]
    Monero,
    #[serde(rename = "Ethereum")]
    Ethereum,
    #[serde(rename = "BinanceSmartChain")]
    BinanceSmartChain,
    #[serde(rename = "Optimism")]
    Optimism,
    #[serde(rename = "Arbitrum")]
    Arbitrum,
    #[serde(rename = "Polygon")]
    Polygon,
    #[serde(rename = "Base")]
    Base,
    #[serde(rename = "Haqq")]
    Haqq,
    #[serde(rename = "Liquid")]
    Liquid,
    #[serde(rename = "Arweave")]
    Arweave,
    #[serde(rename = "Cardano")]
    Cardano,
    #[serde(rename = "DeFiChain")]
    DeFiChain,
    #[serde(rename = "Railgun")]
    Railgun,
    #[serde(rename = "BinancePay")]
    BinancePay,
    #[serde(rename = "Solana")]
    Solana,
    #[serde(rename = "Gnosis")]
    Gnosis,
}

impl Default for Blockchain {
    fn default() -> Blockchain {
        Self::Bitcoin
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Blockchains {
    #[serde(rename = "Bitcoin")]
    Bitcoin,
    #[serde(rename = "Lightning")]
    Lightning,
    #[serde(rename = "Monero")]
    Monero,
    #[serde(rename = "Ethereum")]
    Ethereum,
    #[serde(rename = "BinanceSmartChain")]
    BinanceSmartChain,
    #[serde(rename = "Optimism")]
    Optimism,
    #[serde(rename = "Arbitrum")]
    Arbitrum,
    #[serde(rename = "Polygon")]
    Polygon,
    #[serde(rename = "Base")]
    Base,
    #[serde(rename = "Haqq")]
    Haqq,
    #[serde(rename = "Liquid")]
    Liquid,
    #[serde(rename = "Arweave")]
    Arweave,
    #[serde(rename = "Cardano")]
    Cardano,
    #[serde(rename = "DeFiChain")]
    DeFiChain,
    #[serde(rename = "Railgun")]
    Railgun,
    #[serde(rename = "BinancePay")]
    BinancePay,
    #[serde(rename = "Solana")]
    Solana,
    #[serde(rename = "Gnosis")]
    Gnosis,
}

impl Default for Blockchains {
    fn default() -> Blockchains {
        Self::Bitcoin
    }
}


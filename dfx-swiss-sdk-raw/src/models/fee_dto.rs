/*
 * DFX API
 *
 * DFX API PRD (updated on 7/3/2025, 12:42:13 PM)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FeeDto {
    /// Fee rate
    #[serde(rename = "rate")]
    pub rate: f64,
    /// Fixed fee amount
    #[serde(rename = "fixed")]
    pub fixed: f64,
    /// Network fee amount
    #[serde(rename = "network")]
    pub network: f64,
    /// Minimum fee amount
    #[serde(rename = "min")]
    pub min: f64,
    /// DFX fee amount
    #[serde(rename = "dfx")]
    pub dfx: f64,
    /// Bank fee amount
    #[serde(rename = "bank")]
    pub bank: f64,
    /// Total fee amount (DFX + bank + network fee)
    #[serde(rename = "total")]
    pub total: f64,
    /// Network start fee
    #[serde(rename = "networkStart", skip_serializing_if = "Option::is_none")]
    pub network_start: Option<f64>,
}

impl FeeDto {
    pub fn new(rate: f64, fixed: f64, network: f64, min: f64, dfx: f64, bank: f64, total: f64) -> FeeDto {
        FeeDto {
            rate,
            fixed,
            network,
            min,
            dfx,
            bank,
            total,
            network_start: None,
        }
    }
}


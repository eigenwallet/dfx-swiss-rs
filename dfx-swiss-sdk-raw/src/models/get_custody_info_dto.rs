/*
 * DFX API
 *
 * DFX API PRD (updated on 7/3/2025, 12:42:13 PM)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetCustodyInfoDto {
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "iban", skip_serializing_if = "Option::is_none")]
    pub iban: Option<String>,
    /// Source asset name, Asset or Fiat
    #[serde(rename = "sourceAsset")]
    pub source_asset: String,
    /// Target asset name, Asset or Fiat
    #[serde(rename = "targetAsset")]
    pub target_asset: String,
    /// Amount in source asset
    #[serde(rename = "sourceAmount", skip_serializing_if = "Option::is_none")]
    pub source_amount: Option<f64>,
    /// Amount in target asset
    #[serde(rename = "targetAmount", skip_serializing_if = "Option::is_none")]
    pub target_amount: Option<f64>,
}

impl GetCustodyInfoDto {
    pub fn new(r#type: String, source_asset: String, target_asset: String) -> GetCustodyInfoDto {
        GetCustodyInfoDto {
            r#type,
            iban: None,
            source_asset,
            target_asset,
            source_amount: None,
            target_amount: None,
        }
    }
}


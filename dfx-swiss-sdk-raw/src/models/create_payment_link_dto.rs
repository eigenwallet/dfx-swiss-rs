/*
 * DFX API
 *
 * DFX API PRD (updated on 7/3/2025, 12:42:13 PM)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreatePaymentLinkDto {
    #[serde(rename = "routeId", skip_serializing_if = "Option::is_none")]
    pub route_id: Option<f64>,
    #[serde(rename = "route", skip_serializing_if = "Option::is_none")]
    pub route: Option<String>,
    #[serde(rename = "externalId", skip_serializing_if = "Option::is_none")]
    pub external_id: Option<String>,
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    #[serde(rename = "webhookUrl", skip_serializing_if = "Option::is_none")]
    pub webhook_url: Option<String>,
    #[serde(rename = "payment", skip_serializing_if = "Option::is_none")]
    pub payment: Option<Box<models::CreatePaymentLinkPaymentDto>>,
    #[serde(rename = "config", skip_serializing_if = "Option::is_none")]
    pub config: Option<Box<models::UpdatePaymentLinkConfigDto>>,
}

impl CreatePaymentLinkDto {
    pub fn new() -> CreatePaymentLinkDto {
        CreatePaymentLinkDto {
            route_id: None,
            route: None,
            external_id: None,
            label: None,
            webhook_url: None,
            payment: None,
            config: None,
        }
    }
}


/*
 * DFX API
 *
 * DFX API PRD (updated on 7/3/2025, 12:42:13 PM)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct KycSessionInfoDto {
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "additionalInfo", skip_serializing_if = "Option::is_none")]
    pub additional_info: Option<serde_json::Value>,
}

impl KycSessionInfoDto {
    pub fn new(url: String, r#type: Type) -> KycSessionInfoDto {
        KycSessionInfoDto {
            url,
            r#type,
            additional_info: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Browser")]
    Browser,
    #[serde(rename = "API")]
    Api,
    #[serde(rename = "Token")]
    Token,
    #[serde(rename = "None")]
    None,
}

impl Default for Type {
    fn default() -> Type {
        Self::Browser
    }
}


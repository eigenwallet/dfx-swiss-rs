/*
 * DFX API
 *
 * DFX API PRD (updated on 7/3/2025, 12:42:13 PM)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateCustodyAccountDto {
    #[serde(rename = "addressType")]
    pub address_type: AddressType,
    #[serde(rename = "wallet", skip_serializing_if = "Option::is_none")]
    pub wallet: Option<String>,
    #[serde(rename = "usedRef", skip_serializing_if = "Option::is_none")]
    pub used_ref: Option<String>,
    /// Special code
    #[serde(rename = "specialCode", skip_serializing_if = "Option::is_none")]
    pub special_code: Option<String>,
    /// Moderator
    #[serde(rename = "moderator", skip_serializing_if = "Option::is_none")]
    pub moderator: Option<String>,
}

impl CreateCustodyAccountDto {
    pub fn new(address_type: AddressType) -> CreateCustodyAccountDto {
        CreateCustodyAccountDto {
            address_type,
            wallet: None,
            used_ref: None,
            special_code: None,
            moderator: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AddressType {
    #[serde(rename = "EVM")]
    Evm,
}

impl Default for AddressType {
    fn default() -> AddressType {
        Self::Evm
    }
}


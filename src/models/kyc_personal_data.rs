/*
 * DFX API
 *
 * DFX API PRD (updated on 7/3/2025, 12:42:13 PM)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct KycPersonalData {
    #[serde(rename = "accountType")]
    pub account_type: AccountType,
    #[serde(rename = "firstName")]
    pub first_name: String,
    #[serde(rename = "lastName")]
    pub last_name: String,
    #[serde(rename = "phone")]
    pub phone: String,
    #[serde(rename = "address")]
    pub address: Box<models::KycAddress>,
    #[serde(rename = "organizationName", skip_serializing_if = "Option::is_none")]
    pub organization_name: Option<String>,
    #[serde(rename = "organizationAddress", skip_serializing_if = "Option::is_none")]
    pub organization_address: Option<Box<models::KycAddress>>,
}

impl KycPersonalData {
    pub fn new(account_type: AccountType, first_name: String, last_name: String, phone: String, address: models::KycAddress) -> KycPersonalData {
        KycPersonalData {
            account_type,
            first_name,
            last_name,
            phone,
            address: Box::new(address),
            organization_name: None,
            organization_address: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AccountType {
    #[serde(rename = "Personal")]
    Personal,
    #[serde(rename = "Organization")]
    Organization,
    #[serde(rename = "SoleProprietorship")]
    SoleProprietorship,
}

impl Default for AccountType {
    fn default() -> AccountType {
        Self::Personal
    }
}


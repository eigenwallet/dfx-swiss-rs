/*
 * DFX API
 *
 * DFX API PRD (updated on 7/3/2025, 12:42:13 PM)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SwapDto {
    #[serde(rename = "id")]
    pub id: f64,
    #[serde(rename = "active")]
    pub active: bool,
    #[serde(rename = "asset")]
    pub asset: Box<models::AssetDto>,
    #[serde(rename = "deposit", skip_serializing_if = "Option::is_none")]
    pub deposit: Option<Box<models::DepositDto>>,
    /// Volume in CHF
    #[serde(rename = "volume")]
    pub volume: f64,
    /// Annual volume in CHF
    #[serde(rename = "annualVolume")]
    pub annual_volume: f64,
    #[serde(rename = "fee")]
    pub fee: f64,
    #[serde(rename = "blockchain")]
    pub blockchain: Blockchain,
    #[serde(rename = "minDeposits")]
    pub min_deposits: Vec<models::MinAmount>,
    #[serde(rename = "minFee")]
    pub min_fee: Box<models::MinAmount>,
}

impl SwapDto {
    pub fn new(id: f64, active: bool, asset: models::AssetDto, volume: f64, annual_volume: f64, fee: f64, blockchain: Blockchain, min_deposits: Vec<models::MinAmount>, min_fee: models::MinAmount) -> SwapDto {
        SwapDto {
            id,
            active,
            asset: Box::new(asset),
            deposit: None,
            volume,
            annual_volume,
            fee,
            blockchain,
            min_deposits,
            min_fee: Box::new(min_fee),
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Blockchain {
    #[serde(rename = "Bitcoin")]
    Bitcoin,
    #[serde(rename = "Lightning")]
    Lightning,
    #[serde(rename = "Monero")]
    Monero,
    #[serde(rename = "Ethereum")]
    Ethereum,
    #[serde(rename = "BinanceSmartChain")]
    BinanceSmartChain,
    #[serde(rename = "Optimism")]
    Optimism,
    #[serde(rename = "Arbitrum")]
    Arbitrum,
    #[serde(rename = "Polygon")]
    Polygon,
    #[serde(rename = "Base")]
    Base,
    #[serde(rename = "Haqq")]
    Haqq,
    #[serde(rename = "Liquid")]
    Liquid,
    #[serde(rename = "Arweave")]
    Arweave,
    #[serde(rename = "Cardano")]
    Cardano,
    #[serde(rename = "DeFiChain")]
    DeFiChain,
    #[serde(rename = "Railgun")]
    Railgun,
    #[serde(rename = "BinancePay")]
    BinancePay,
    #[serde(rename = "Solana")]
    Solana,
    #[serde(rename = "Gnosis")]
    Gnosis,
}

impl Default for Blockchain {
    fn default() -> Blockchain {
        Self::Bitcoin
    }
}


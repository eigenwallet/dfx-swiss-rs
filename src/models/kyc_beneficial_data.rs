/*
 * DFX API
 *
 * DFX API PRD (updated on 7/3/2025, 12:42:13 PM)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct KycBeneficialData {
    /// Are there beneficial owners with 25% or more
    #[serde(rename = "hasBeneficialOwners")]
    pub has_beneficial_owners: bool,
    /// Is the account holder a beneficial owner?
    #[serde(rename = "isAccountHolderInvolved")]
    pub is_account_holder_involved: bool,
    #[serde(rename = "managingDirector", skip_serializing_if = "Option::is_none")]
    pub managing_director: Option<Box<models::ContactPersonData>>,
    #[serde(rename = "beneficialOwners", skip_serializing_if = "Option::is_none")]
    pub beneficial_owners: Option<Vec<models::ContactPersonData>>,
}

impl KycBeneficialData {
    pub fn new(has_beneficial_owners: bool, is_account_holder_involved: bool) -> KycBeneficialData {
        KycBeneficialData {
            has_beneficial_owners,
            is_account_holder_involved,
            managing_director: None,
            beneficial_owners: None,
        }
    }
}


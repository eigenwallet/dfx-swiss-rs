/*
 * DFX API
 *
 * DFX API PRD (updated on 7/3/2025, 12:42:13 PM)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct KycLegalEntityData {
    #[serde(rename = "legalEntity")]
    pub legal_entity: LegalEntity,
}

impl KycLegalEntityData {
    pub fn new(legal_entity: LegalEntity) -> KycLegalEntityData {
        KycLegalEntityData {
            legal_entity,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LegalEntity {
    #[serde(rename = "AG")]
    Ag,
    #[serde(rename = "GmbH")]
    GmbH,
    #[serde(rename = "UG")]
    Ug,
    #[serde(rename = "GbR")]
    GbR,
    #[serde(rename = "Association")]
    Association,
    #[serde(rename = "Foundation")]
    Foundation,
    #[serde(rename = "LifeInsurance")]
    LifeInsurance,
    #[serde(rename = "Trust")]
    Trust,
    #[serde(rename = "Other")]
    Other,
}

impl Default for LegalEntity {
    fn default() -> LegalEntity {
        Self::Ag
    }
}


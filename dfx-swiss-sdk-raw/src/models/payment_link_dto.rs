/*
 * DFX API
 *
 * DFX API PRD (updated on 7/3/2025, 12:42:13 PM)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PaymentLinkDto {
    #[serde(rename = "id")]
    pub id: f64,
    #[serde(rename = "routeId")]
    pub route_id: f64,
    #[serde(rename = "externalId", skip_serializing_if = "Option::is_none")]
    pub external_id: Option<String>,
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    #[serde(rename = "webhookUrl", skip_serializing_if = "Option::is_none")]
    pub webhook_url: Option<String>,
    #[serde(rename = "status")]
    pub status: Status,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "lnurl")]
    pub lnurl: String,
    #[serde(rename = "recipient", skip_serializing_if = "Option::is_none")]
    pub recipient: Option<Box<models::PaymentLinkRecipientDto>>,
    #[serde(rename = "config", skip_serializing_if = "Option::is_none")]
    pub config: Option<Box<models::PaymentLinkConfigDto>>,
    #[serde(rename = "payment", skip_serializing_if = "Option::is_none")]
    pub payment: Option<Box<models::PaymentLinkPaymentDto>>,
}

impl PaymentLinkDto {
    pub fn new(id: f64, route_id: f64, status: Status, url: String, lnurl: String) -> PaymentLinkDto {
        PaymentLinkDto {
            id,
            route_id,
            external_id: None,
            label: None,
            webhook_url: None,
            status,
            url,
            lnurl,
            recipient: None,
            config: None,
            payment: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "Active")]
    Active,
    #[serde(rename = "Inactive")]
    Inactive,
}

impl Default for Status {
    fn default() -> Status {
        Self::Active
    }
}


/*
 * DFX API
 *
 * DFX API PRD (updated on 7/3/2025, 12:42:13 PM)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetSellQuoteDto {
    /// Source asset
    #[serde(rename = "asset")]
    pub asset: Box<models::EntityDto>,
    /// Amount in source asset
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<f64>,
    /// Target currency
    #[serde(rename = "currency")]
    pub currency: Box<models::EntityDto>,
    /// Amount in target currency
    #[serde(rename = "targetAmount", skip_serializing_if = "Option::is_none")]
    pub target_amount: Option<f64>,
    /// This field is deprecated, use \"specialCode\" instead.
    #[serde(rename = "discountCode", skip_serializing_if = "Option::is_none")]
    pub discount_code: Option<String>,
    /// Special code
    #[serde(rename = "specialCode", skip_serializing_if = "Option::is_none")]
    pub special_code: Option<String>,
    #[serde(rename = "wallet", skip_serializing_if = "Option::is_none")]
    pub wallet: Option<String>,
}

impl GetSellQuoteDto {
    pub fn new(asset: models::EntityDto, currency: models::EntityDto) -> GetSellQuoteDto {
        GetSellQuoteDto {
            asset: Box::new(asset),
            amount: None,
            currency: Box::new(currency),
            target_amount: None,
            discount_code: None,
            special_code: None,
            wallet: None,
        }
    }
}

